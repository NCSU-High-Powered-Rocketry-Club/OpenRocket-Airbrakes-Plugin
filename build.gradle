plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

// Diagnostic check for OpenRocket JAR
def openRocketJarName = 'OpenRocket-24.12.jar' // Using the version from your compileOnly dependency
def openRocketJarPath = "libs/${openRocketJarName}"
def openRocketJarFileForCheck = file(openRocketJarPath)

if (!openRocketJarFileForCheck.exists()) {
    println "------------------------------------------------------------------------------------"
    println "ERROR (Gradle Build): OpenRocket JAR file NOT FOUND by Gradle at expected location!"
    println "Expected path: ${openRocketJarFileForCheck.absolutePath}"
    println "Please ensure:"
    println "1. The 'libs' folder exists directly under your project root: ${project.projectDir}/libs"
    println "2. The JAR file is named EXACTLY '${openRocketJarName}' (case-sensitive)."
    println "3. The JAR file is placed inside the 'libs' folder."
    println "Build is likely to fail due to missing OpenRocket classes."
    println "------------------------------------------------------------------------------------"
} else {
    println "------------------------------------------------------------------------------------"
    println "SUCCESS (Gradle Build): OpenRocket JAR file FOUND by Gradle at (checked path):"
    println "${openRocketJarFileForCheck.absolutePath}"
    println "------------------------------------------------------------------------------------"
}

group = 'com.airbrakesplugin'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Using the variable defined in the diagnostic check for consistency
    compileOnly files(openRocketJarPath)

    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    runtimeOnly 'org.slf4j:slf4j-simple:2.0.7'

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.13.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.13.0'
    testRuntimeOnly 'org.slf4j:slf4j-simple:2.0.13'

    // OpenRocket for tests (choose one option)
    // Option A: If you already have the JAR locally
    testImplementation files("libs/${openRocketJarName}")
    
    // Option B (commented out): If you published to local maven
    // testImplementation 'info.openrocket:openrocket-core:24.12'
}

// Ensure modern Byte Buddy for Java 24 compatibility
configurations.all {
    resolutionStrategy.eachDependency { d ->
        if (d.requested.group == 'net.bytebuddy' && d.requested.name == 'byte-buddy') {
            d.useVersion('1.15.+')
        }
        if (d.requested.group == 'net.bytebuddy' && d.requested.name == 'byte-buddy-agent') {
            d.useVersion('1.15.+')
        }
    }
}

// Update Java version settings to 17
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    jvmArgs += ['-Dnet.bytebuddy.experimental=true']
}

shadowJar {
    archiveBaseName.set('AirbrakePlugin')
    archiveClassifier.set('')
    archiveVersion.set(project.version.toString())
}
